name: tests
on:
    push:
    pull_request:
    schedule:
        -   cron: '0 0 * * *'
env:
    NAME: framework_github

jobs:
    ubuntu:
        runs-on: ubuntu-latest

#        services:
#            mysql:
#                image: mysql:8.0
#                env:
#                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
#                    MYSQL_DATABASE: ${{ env.NAME }}
#                ports:
#                    - 3306
#                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        strategy:
            fail-fast: true
            matrix:
                php: [ '8.0' ]
                db: [sqlite]
                search: [elastic]
                #db: [mysql, sqlite]
                #search: [elastic, algolia]

        name: ubuntu-latest, PHP ${{ matrix.php }}, ${{ matrix.db }}, ${{ matrix.search }}

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Configure sysctl limits for ElasticSearch
                run: |
                    sudo swapoff -a
                    sudo sysctl -w vm.swappiness=1
                    sudo sysctl -w fs.file-max=262144
                    sudo sysctl -w vm.max_map_count=262144

            -   name: Install ElasticSearch
                uses: getong/elasticsearch-action@v1.2
                with:
                    elasticsearch version: '7.6.1'
                    host port: 9200
                    container port: 9200
                    host node port: 9300
                    node port: 9300
                    discovery type: 'single-node'

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: mbstring, pdo, sqlite, pdo_sqlite
                    ini-values: variables_order=EGPCS
                    tools: composer:v2
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Setup problem matchers
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Install dependencies
                run: composer update --prefer-dist --no-interaction --no-progress

            -   name: Execute tests
                run: vendor/bin/phpunit
                env:
                    SETTINGS: tests/settings/${{ matrix.db }}__${{ matrix.search }}.php
                    MYSQL_DATABASE: ${{ env.NAME }}
                    MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
                    MYSQL_USERNAME: root
                    MYSQL_PASSWORD: root
                    SEARCH_INDEX_PREFIX: "${{ env.NAME }}_"
                    ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
                    ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
